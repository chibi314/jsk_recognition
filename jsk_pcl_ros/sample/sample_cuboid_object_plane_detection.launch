<launch>
  <arg name="input_cloud" default="/hydrus1/rs_d435/depth_registered/points" />
  <arg name="manager" default="plane_detection_manager" />
  <arg name="rosbag_arg" default="$(find jsk_pcl_ros)/sample/data/cuboid_object_plane_detection.bag --clock --loop"/>
  <rosparam param="/use_sim_time">true</rosparam>
  <arg name="direct" default="false"/>

  <node name="rosbag_play"
        pkg="rosbag" type="play"
        args="$(arg rosbag_arg)" />

  <node name="$(arg manager)"
        pkg="nodelet" type="nodelet"
        args="manager" output="screen" />

  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid $(arg manager)"  output="log">
    <remap from="~input" to="$(arg input_cloud)"/>
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.01
      filter_limit_max: 20.0
      filter_limit_negative: False
      leaf_size: 0.02
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet" name="hsi_filter"
        args="load jsk_pcl/HSIColorFilter $(arg manager)" output="log">
    <remap from="~input" to="voxel_grid/output"/>
    <rosparam>
        use_indices: false
        keep_organized: true
    </rosparam>
    <param name="h_limit_max" value="-106" />
    <param name="h_limit_min" value="-119" />
    <param name="s_limit_max" value="255" />
    <param name="s_limit_min" value="142" />
    <param name="i_limit_max" value="91" />
    <param name="i_limit_min" value="13" />
  </node>

  <node pkg="nodelet" type="nodelet" name="euclidean_clustering"
        args="load jsk_pcl/EuclideanClustering $(arg manager)" output="log">
    <remap from="~input" to="hsi_filter/output" />
    <rosparam>
      tolerance: 0.05
      min_size: 50
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet"
        name="cluster_decomposer"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg manager)" output="log">
    <remap from="~input" to="hsi_filter/output" />
    <remap from="~target" to="euclidean_clustering/output" />
    <rosparam>
      approximate_sync: true
      align_boxes: false
      sort_by: cloud_size
      queue_size: 100
      max_size: -1
      min_size: -1
    </rosparam>
  </node>

  <node name="index_publisher"
        pkg="jsk_pcl_ros" type="sample_int_publisher_from_cluster_indices.py">
    <remap from="~input" to="euclidean_clustering/output"/>
  </node>

  <node pkg="nodelet" type="nodelet"
        name="selected_cluster_publisher"
        args="load jsk_pcl/SelectedClusterPublisher $(arg manager)" output="log">
    <remap from="~input" to="hsi_filter/output"/>
    <remap from="~indices" to="euclidean_clustering/output"/>
    <remap from="~selected_index" to="index_publisher/output"/>
  </node>

  <node name="multi_plane_sac_segmentation"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/MultiPlaneSACSegmentation $(arg manager)" output="log">
    <remap from="~input" to="/selected_cluster_publisher/output" unless="$(arg direct)"/>
    <remap from="~input" to="hsi_filter/output" if="$(arg direct)"/>
    <rosparam>
      use_normal: false
      use_clusters: false
      use_imu_parallel: false
      use_imu_perpendicular: false
      max_iterations: 10000
      min_inliers: 100
      min_points: 1000
      min_trial: 3
      outlier_threshold: 0.05
    </rosparam>
  </node>

  <node name="rviz"
        pkg="rviz" type="rviz"
        args="-d $(find jsk_pcl_ros)/sample/rviz/cuboid_object_plane_detection.rviz"/>

  <node name="rqt_reconfigure"
        pkg="rqt_reconfigure" type="rqt_reconfigure"/>
</launch>
